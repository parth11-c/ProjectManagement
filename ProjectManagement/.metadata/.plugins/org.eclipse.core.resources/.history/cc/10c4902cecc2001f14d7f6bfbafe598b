package com.data.controller;

import com.data.entity.Users;
import com.data.service.UService;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

@RestController
@RequestMapping("/api/")
public class UController {

    @Autowired
    private UService UsersService;

    // Save or update a user
    @PostMapping("/save")
    public ResponseEntity<Users> saveOrUpdateUser(@RequestBody Users user) {
        Users savedUser = UsersService.saveOrUpdateUsers(user);
        return ResponseEntity.ok(savedUser);
    }

    // Get all users
    @GetMapping("/")
    public ResponseEntity<List<Users>> getAllUsers() {
        List<Users> users = UsersService.getAllUserss();
        return new ResponseEntity<>(users, HttpStatus.OK);
    }

    // Get user by ID
    @GetMapping("/{id}")
    public ResponseEntity<Users> getUserById(@PathVariable String id) {
        Users user = UsersService.getUsersById(id)
                .orElseThrow(() -> new RuntimeException("User not found"));
        return new ResponseEntity<>(user, HttpStatus.OK);
    }

    // Delete user by ID
    @DeleteMapping("/delete/{id}")
    public ResponseEntity<String> deleteUser(@PathVariable String id) {
        UsersService.deleteUsersById(id);
        return new ResponseEntity<>("User deleted successfully!", HttpStatus.OK);
    }

     @PutMapping("/update/{id}")
    public ResponseEntity<String> updateUser(@PathVariable String Username, @RequestBody Users updatedUser) {
        boolean isUpdated = UsersService.updateUsersByUsername(Username, updatedUser) != null;
        if (isUpdated) {
            return new ResponseEntity<>("User updated successfully!", HttpStatus.OK);
        } else {
            return new ResponseEntity<>("User not found or update failed!", HttpStatus.NOT_FOUND);
        }
    }
}
